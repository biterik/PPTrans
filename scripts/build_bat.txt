@echo off
REM PPTrans Build Script for Windows
REM Usage: build.bat

setlocal enabledelayedexpansion

echo üöÄ PPTrans Build Script for Windows
echo ===================================

REM Get project root directory
for %%i in ("%~dp0..") do set "PROJECT_ROOT=%%~fi"
set "DIST_DIR=%PROJECT_ROOT%\dist"
set "BUILD_DIR=%PROJECT_ROOT%\build"

echo Project root: %PROJECT_ROOT%
echo.

REM Check if conda environment is active
if "%CONDA_DEFAULT_ENV%"=="" (
    echo ‚ùå Error: Conda environment not active
    echo Please run: conda activate pptrans
    exit /b 1
)

echo ‚úÖ Conda environment active: %CONDA_DEFAULT_ENV%

REM Clean previous builds
echo üßπ Cleaning previous builds...
if exist "%DIST_DIR%" rmdir /s /q "%DIST_DIR%"
if exist "%BUILD_DIR%" rmdir /s /q "%BUILD_DIR%"
mkdir "%DIST_DIR%"

REM Change to project directory
cd /d "%PROJECT_ROOT%"

REM Install/update dependencies
echo üì¶ Installing dependencies...
pip install -r requirements.txt
if errorlevel 1 (
    echo ‚ùå Failed to install dependencies
    exit /b 1
)

REM Run tests
echo üß™ Running tests...
if exist "tests" (
    python -m pytest tests/ -v
    if errorlevel 1 (
        echo ‚ùå Tests failed
        exit /b 1
    )
    echo ‚úÖ Tests passed
) else (
    echo ‚ö†Ô∏è  No tests directory found, skipping tests
)

REM Check spec file
set "SPEC_FILE=pyinstaller_spec\pptrans_windows.spec"
if not exist "%SPEC_FILE%" (
    echo ‚ùå Spec file not found: %SPEC_FILE%
    exit /b 1
)

echo üî® Building with PyInstaller...
echo Using spec file: %SPEC_FILE%

REM Build with PyInstaller
pyinstaller --clean --noconfirm "%SPEC_FILE%"
if errorlevel 1 (
    echo ‚ùå PyInstaller build failed
    exit /b 1
)

REM Check if build was successful
if not exist "%DIST_DIR%\PPTrans" (
    echo ‚ùå Build failed - output directory not found
    exit /b 1
)

echo ‚úÖ Build completed successfully!
echo üìÅ Output directory: %DIST_DIR%\PPTrans

REM Create a zip archive
echo üì¶ Creating distribution archive...
cd /d "%DIST_DIR%"

set "ARCHIVE_NAME=PPTrans-Windows-x64.zip"

REM Use PowerShell to create zip if available
powershell -command "Compress-Archive -Path 'PPTrans' -DestinationPath '%ARCHIVE_NAME%' -Force"
if errorlevel 1 (
    echo ‚ö†Ô∏è  PowerShell zip creation failed, archive not created
) else (
    echo ‚úÖ Archive created: %DIST_DIR%\%ARCHIVE_NAME%
)

REM Display build information
echo.
echo üéâ Build Summary
echo ================
echo Platform: Windows
echo Archive: %ARCHIVE_NAME%
echo Location: %DIST_DIR%
echo.

REM Test the executable
echo üß™ Testing executable...
"%DIST_DIR%\PPTrans\PPTrans.exe" --version 2>nul || echo ‚ö†Ô∏è  Version test failed, but executable exists

echo ‚úÖ Build process completed successfully!
echo.
echo To test the application:
echo   cd "%DIST_DIR%\PPTrans" && PPTrans.exe

pause