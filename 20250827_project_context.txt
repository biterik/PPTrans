# PPTrans Project Context - For Claude

## Project Overview
**PPTrans** is a cross-platform desktop application for translating PowerPoint presentations while preserving all formatting, fonts, images, and layout. It's developed by **Erik Bitzek** and licensed under **Creative Commons Attribution-NonCommercial 4.0**.

## Current Status
- ✅ Complete project structure created
- ✅ Most source files implemented
- ⚠️ **Currently debugging import/startup issues**
- 🎯 **Next Goal:** Get the GUI launching successfully

## Technical Stack
- **Language:** Python 3.11
- **GUI Framework:** Tkinter (built-in)
- **PowerPoint Processing:** python-pptx library
- **Translation:** googletrans (Google Translate API)
- **Environment:** Conda with conda-forge channels
- **Build System:** PyInstaller for executables
- **Platforms:** macOS (M1/M2), Windows, Linux

## Project Structure
```
PPTrans/
├── README.md
├── LICENSE (CC BY-NC 4.0)
├── environment.yml (conda environment)
├── requirements.txt
├── setup.py
├── src/
│   ├── main.py (application entry point)
│   ├── gui/ (user interface)
│   │   ├── main_window.py (main GUI)
│   │   ├── widgets.py (custom widgets)
│   │   └── dialogs.py (settings, about, etc.)
│   ├── core/ (business logic)
│   │   ├── translator.py (Google Translate integration)
│   │   ├── pptx_processor.py (PowerPoint processing)
│   │   └── language_manager.py (language support)
│   └── utils/ (utilities)
│       ├── logger.py (comprehensive logging)
│       ├── config.py (configuration management)
│       └── exceptions.py (custom exception classes)
├── tests/ (unit tests)
├── scripts/ (build scripts)
├── pyinstaller_spec/ (build specifications)
└── docs/ (documentation)
```

## Key Features Implemented
1. **Translation Engine** (`core/translator.py`):
   - Google Translate integration with retry logic
   - Text chunking for large content
   - Error handling and statistics tracking
   - Parallel processing support

2. **PowerPoint Processor** (`core/pptx_processor.py`):
   - Format preservation (fonts, colors, alignment)
   - Text extraction and reapplication
   - Slide range selection
   - Backup creation

3. **GUI Components** (`gui/`):
   - File selection and validation
   - Language dropdown with 100+ languages
   - Progress dialogs with statistics
   - Settings dialog with advanced options
   - Real-time logging display

4. **Utilities**:
   - Professional logging with file rotation
   - Configuration management with persistence
   - Custom exception hierarchy
   - Language validation and management

## Current Issues (As of Last Session)
1. **Main Import Problem:** `src/main.py` was showing placeholder content instead of actual application
2. **Syntax Errors:** Fixed syntax errors in `pptx_processor.py`
3. **Missing Files:** Some source files might need verification

## Environment Setup
- **Conda environment:** `pptrans`
- **Dependencies:** All installed via pip fallback due to SSL certificate issues
- **Platform:** macOS (user: Erik Bitzek)
- **Location:** `/Users/oq50iqeq/Desktop/PROJECTS/Powerpointtranslation/PPTrans/PPTrans`

## Recent Actions Taken
1. ✅ Created complete project structure
2. ✅ Fixed SSL certificate issues with conda
3. ✅ Set up conda environment with pip fallback
4. ✅ Implemented all core source files
5. ✅ Fixed syntax errors in pptx_processor.py
6. ⚠️ **NEXT:** Need to verify `src/main.py` has correct content and debug remaining import issues

## Debugging Approach Needed
1. **Verify all source files are present and correct**
2. **Test imports systematically:**
   ```python
   import sys; sys.path.insert(0, 'src')
   from utils.logger import setup_logger  # Test each module
   ```
3. **Check for any remaining syntax errors**
4. **Ensure main.py launches the GUI correctly**

## Files That Were Fully Implemented
- ✅ `src/utils/logger.py` - Comprehensive logging system
- ✅ `src/utils/config.py` - Configuration management
- ✅ `src/utils/exceptions.py` - Custom exception classes
- ✅ `src/core/language_manager.py` - Language support (100+ languages)
- ✅ `src/core/translator.py` - Google Translate integration
- ✅ `src/core/pptx_processor.py` - PowerPoint processing (just fixed)
- ✅ `src/gui/main_window.py` - Main application window
- ✅ `src/gui/widgets.py` - Custom GUI widgets
- ✅ `src/gui/dialogs.py` - Settings and other dialogs

## Key Implementation Details
- **Error Handling:** Comprehensive custom exceptions with user-friendly messages
- **Logging:** File rotation, multiple levels, colored console output
- **Configuration:** JSON-based with dot notation access
- **Threading:** Background translation with progress updates
- **Format Preservation:** Detailed font, color, and alignment preservation
- **Language Support:** 100+ languages with auto-detection
- **Build System:** Cross-platform PyInstaller specs for macOS, Windows, Linux

## User Information
- **Name:** Erik Bitzek
- **Email:** erik.bitzek@fau.de
- **Platform:** macOS M2
- **Use Case:** Academic/research tool for translating PowerPoint presentations

## Immediate Next Steps for Debugging
1. Replace `src/main.py` with correct application entry point
2. Run systematic import tests
3. Launch GUI and verify functionality
4. Test basic translation workflow
5. Prepare for GitHub upload

## License Information
- **License:** Creative Commons Attribution-NonCommercial 4.0 International
- **Usage:** Non-commercial use with attribution required
- **Commercial Use:** Requires separate permission from Erik Bitzek

## Development Environment Commands
```bash
# Activate environment
conda activate pptrans

# Run application
python src/main.py

# Test imports
python -c "import sys; sys.path.insert(0, 'src'); from gui.main_window import PPTransMainWindow; print('OK')"

# Build executable (macOS)
pyinstaller --clean --noconfirm pyinstaller_spec/pptrans_mac.spec
```

This context should provide you with complete information to continue debugging and development of the PPTrans project in any new conversation.
